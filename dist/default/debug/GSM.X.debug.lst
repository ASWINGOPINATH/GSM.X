

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 20 16:35:47 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0006                     _PORTB	set	6
   176     0019                     _TXREG	set	25
   177     0047                     _RD7	set	71
   178     0045                     _RD5	set	69
   179     0044                     _RD4	set	68
   180     0043                     _RD3	set	67
   181     0042                     _RD2	set	66
   182     0041                     _RD1	set	65
   183     0040                     _RD0	set	64
   184     0031                     _RB1	set	49
   185     0030                     _RB0	set	48
   186     0064                     _TXIF	set	100
   187     00C4                     _CREN	set	196
   188     00C7                     _SPEN	set	199
   189     0099                     _SPBRG	set	153
   190     0086                     _TRISB	set	134
   191     0088                     _TRISD	set	136
   192     04C4                     _SYNC	set	1220
   193     04C2                     _BRGH	set	1218
   194     04C5                     _TXEN	set	1221
   195                           
   196                           	psect	strings
   197     0003                     __pstrings:
   198     0003                     stringtab:
   199     0003                     __stringtab:
   200                           
   201                           ;	String table - string pointers are 1 byte each
   202     0003  1BFF               	btfsc	btemp+1,7
   203     0004  280D               	ljmp	stringcode
   204     0005  1383               	bcf	3,7
   205     0006  187F               	btfsc	btemp+1,0
   206     0007  1783               	bsf	3,7
   207     0008  0800               	movf	0,w
   208     0009  0A84               	incf	4,f
   209     000A  1903               	skipnz
   210     000B  0AFF               	incf	btemp+1,f
   211     000C  0008               	return
   212     000D                     stringcode:
   213     000D                     stringdir:
   214     000D  3000               	movlw	high stringdir
   215     000E  008A               	movwf	10
   216     000F  0804               	movf	4,w
   217     0010  0A84               	incf	4,f
   218     0011  0782               	addwf	2,f
   219     0012                     __stringbase:
   220     0012  3400               	retlw	0
   221     0013                     __end_of__stringtab:
   222     0013                     STR_4:
   223     0013  3452               	retlw	82	;'R'
   224     0014  3445               	retlw	69	;'E'
   225     0015  3444               	retlw	68	;'D'
   226     0016  3449               	retlw	73	;'I'
   227     0017  3441               	retlw	65	;'A'
   228     0018  344C               	retlw	76	;'L'
   229     0019  3420               	retlw	32	;' '
   230     001A  344C               	retlw	76	;'L'
   231     001B  3441               	retlw	65	;'A'
   232     001C  3453               	retlw	83	;'S'
   233     001D  3454               	retlw	84	;'T'
   234     001E  3420               	retlw	32	;' '
   235     001F  344E               	retlw	78	;'N'
   236     0020  3455               	retlw	85	;'U'
   237     0021  344D               	retlw	77	;'M'
   238     0022  3442               	retlw	66	;'B'
   239     0023  3445               	retlw	69	;'E'
   240     0024  3452               	retlw	82	;'R'
   241     0025  3400               	retlw	0
   242     0026                     STR_5:
   243     0026  3445               	retlw	69	;'E'
   244     0027  344E               	retlw	78	;'N'
   245     0028  3444               	retlw	68	;'D'
   246     0029  3420               	retlw	32	;' '
   247     002A  3454               	retlw	84	;'T'
   248     002B  3448               	retlw	72	;'H'
   249     002C  3445               	retlw	69	;'E'
   250     002D  3420               	retlw	32	;' '
   251     002E  3443               	retlw	67	;'C'
   252     002F  3441               	retlw	65	;'A'
   253     0030  344C               	retlw	76	;'L'
   254     0031  344C               	retlw	76	;'L'
   255     0032  3400               	retlw	0
   256     0033                     STR_1:
   257     0033  3443               	retlw	67	;'C'
   258     0034  3441               	retlw	65	;'A'
   259     0035  344C               	retlw	76	;'L'
   260     0036  344C               	retlw	76	;'L'
   261     0037  3449               	retlw	73	;'I'
   262     0038  344E               	retlw	78	;'N'
   263     0039  3447               	retlw	71	;'G'
   264     003A  3400               	retlw	0
   265     003B                     STR_3:
   266     003B  3441               	retlw	65	;'A'
   267     003C  3454               	retlw	84	;'T'
   268     003D  3444               	retlw	68	;'D'
   269     003E  344C               	retlw	76	;'L'
   270     003F  340D               	retlw	13
   271     0040  340A               	retlw	10
   272     0041  3400               	retlw	0
   273     0042                     STR_9:
   274     0042  3441               	retlw	65	;'A'
   275     0043  3454               	retlw	84	;'T'
   276     0044  3441               	retlw	65	;'A'
   277     0045  340D               	retlw	13
   278     0046  340A               	retlw	10
   279     0047  3400               	retlw	0
   280     0048                     STR_10:
   281     0048  3441               	retlw	65	;'A'
   282     0049  3454               	retlw	84	;'T'
   283     004A  3448               	retlw	72	;'H'
   284     004B  340D               	retlw	13
   285     004C  340A               	retlw	10
   286     004D  3400               	retlw	0
   287     004E                     STR_8:
   288     004E  343B               	retlw	59	;';'
   289     004F  340D               	retlw	13
   290     0050  340A               	retlw	10
   291     0051  3400               	retlw	0
   292     0052                     STR_7:
   293     0052  3441               	retlw	65	;'A'
   294     0053  3454               	retlw	84	;'T'
   295     0054  3444               	retlw	68	;'D'
   296     0055  3400               	retlw	0
   297     0056                     STR_6:
   298     0056  3441               	retlw	65	;'A'
   299     0057  3454               	retlw	84	;'T'
   300     0058  3400               	retlw	0
   301     0033                     
   302                           	psect	cinit
   303     07FC                     start_initialization:	
   304                           ; #config settings
   305                           
   306     07FC                     __initialization:
   307     07FC                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310     07FC                     __end_of__initialization:
   311     07FC  0183               	clrf	3
   312     07FD  120A  118A  2F19   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	cstackCOMMON
   315     0070                     __pcstackCOMMON:
   316     0070                     ?_Init:
   317     0070                     ?_lcd_init:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     ?_cmd:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ??_cmd:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_show:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_key:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ??_key:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_Call:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_SendCommand:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_End:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?_dat:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ??_dat:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0070                     SendCommand@command:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358     0070                     	ds	2
   359     0072                     ??_Init:
   360     0072                     ??_Call:	
   361                           ; 1 bytes @ 0x2
   362                           
   363     0072                     ??_SendCommand:	
   364                           ; 1 bytes @ 0x2
   365                           
   366     0072                     ??_End:	
   367                           ; 1 bytes @ 0x2
   368                           
   369     0072                     cmd@a:	
   370                           ; 1 bytes @ 0x2
   371                           
   372     0072                     dat@b:	
   373                           ; 1 bytes @ 0x2
   374                           
   375     0072                     Call@phoneNumber:	
   376                           ; 1 bytes @ 0x2
   377                           
   378                           
   379                           ; 1 bytes @ 0x2
   380     0072                     	ds	1
   381     0073                     ??_lcd_init:
   382     0073                     ??_show:	
   383                           ; 1 bytes @ 0x3
   384                           
   385     0073                     show@s:	
   386                           ; 1 bytes @ 0x3
   387                           
   388                           
   389                           ; 1 bytes @ 0x3
   390     0073                     	ds	2
   391     0075                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x5
   394     0075                     	ds	2
   395                           
   396                           	psect	cstackBANK0
   397     0020                     __pcstackBANK0:
   398     0020                     main@phonenumber:
   399                           
   400                           ; 11 bytes @ 0x0
   401     0020                     	ds	11
   402     002B                     main@i_93:
   403                           
   404                           ; 2 bytes @ 0xB
   405     002B                     	ds	2
   406     002D                     main@i:
   407                           
   408                           ; 2 bytes @ 0xD
   409     002D                     	ds	2
   410     002F                     main@c:
   411                           
   412                           ; 1 bytes @ 0xF
   413     002F                     	ds	1
   414                           
   415                           	psect	maintext
   416     0719                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 43 in file "GSM3.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  i               2   11[BANK0 ] int 
   427 ;;  phonenumber    11    0[BANK0 ] unsigned char [11]
   428 ;;  i               2   13[BANK0 ] unsigned int 
   429 ;;  c               1   15[BANK0 ] unsigned char 
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : B00/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0      16       0       0       0
   441 ;;      Temps:          2       0       0       0       0
   442 ;;      Totals:         2      16       0       0       0
   443 ;;Total ram usage:       18 bytes
   444 ;; Hardware stack levels required when called: 3
   445 ;; This function calls:
   446 ;;		_Call
   447 ;;		_End
   448 ;;		_Init
   449 ;;		_SendCommand
   450 ;;		_cmd
   451 ;;		_key
   452 ;;		_lcd_init
   453 ;;		_show
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     0719                     _main:	
   460                           ;psect for function _main
   461                           
   462     0719                     l1045:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   465                           
   466                           
   467                           ;GSM3.c: 44:     TRISD = 0xf0;
   468     0719  30F0               	movlw	240
   469     071A  1683               	bsf	3,5	;RP0=1, select bank1
   470     071B  1303               	bcf	3,6	;RP1=0, select bank1
   471     071C  0088               	movwf	8	;volatile
   472     071D                     l1047:
   473                           
   474                           ;GSM3.c: 45:     TRISB=0;
   475     071D  0186               	clrf	6	;volatile
   476     071E                     l1049:
   477                           
   478                           ;GSM3.c: 46:     Init();
   479     071E  120A  118A  265A  120A  118A  	fcall	_Init
   480     0723                     l1051:
   481                           
   482                           ;GSM3.c: 48:     unsigned int i;;GSM3.c: 49:     lcd_init();
   483     0723  120A  118A  25DF  120A  118A  	fcall	_lcd_init
   484     0728                     l1053:
   485                           
   486                           ;GSM3.c: 50:     cmd(0x8A);
   487     0728  308A               	movlw	138
   488     0729  120A  118A  25B9  120A  118A  	fcall	_cmd
   489     072E                     l1055:
   490                           
   491                           ;GSM3.c: 51:     show("CALLING");
   492     072E  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   493     072F  120A  118A  2615  120A  118A  	fcall	_show
   494     0734                     l1057:
   495     0734                     l1059:
   496                           
   497                           ;GSM3.c: 56:         for(i=0;i<15000;i++);
   498     0734  1283               	bcf	3,5	;RP0=0, select bank0
   499     0735  1303               	bcf	3,6	;RP1=0, select bank0
   500     0736  01AD               	clrf	main@i
   501     0737  01AE               	clrf	main@i+1
   502     0738                     l1065:
   503     0738  3001               	movlw	1
   504     0739  07AD               	addwf	main@i,f
   505     073A  1803               	skipnc
   506     073B  0AAE               	incf	main@i+1,f
   507     073C  3000               	movlw	0
   508     073D  07AE               	addwf	main@i+1,f
   509     073E  303A               	movlw	58
   510     073F  022E               	subwf	main@i+1,w
   511     0740  3098               	movlw	152
   512     0741  1903               	skipnz
   513     0742  022D               	subwf	main@i,w
   514     0743  1C03               	skipc
   515     0744  2F46               	goto	u641
   516     0745  2F47               	goto	u640
   517     0746                     u641:
   518     0746  2F38               	goto	l1065
   519     0747                     u640:
   520     0747                     l1067:
   521                           
   522                           ;GSM3.c: 57:         cmd(0x18);
   523     0747  3018               	movlw	24
   524     0748  120A  118A  25B9  120A  118A  	fcall	_cmd
   525     074D                     l1069:
   526                           
   527                           ;GSM3.c: 58:         for(i=0;i<15000;i++);
   528     074D  1283               	bcf	3,5	;RP0=0, select bank0
   529     074E  1303               	bcf	3,6	;RP1=0, select bank0
   530     074F  01AD               	clrf	main@i
   531     0750  01AE               	clrf	main@i+1
   532     0751                     l1075:
   533     0751  3001               	movlw	1
   534     0752  07AD               	addwf	main@i,f
   535     0753  1803               	skipnc
   536     0754  0AAE               	incf	main@i+1,f
   537     0755  3000               	movlw	0
   538     0756  07AE               	addwf	main@i+1,f
   539     0757  303A               	movlw	58
   540     0758  022E               	subwf	main@i+1,w
   541     0759  3098               	movlw	152
   542     075A  1903               	skipnz
   543     075B  022D               	subwf	main@i,w
   544     075C  1C03               	skipc
   545     075D  2F5F               	goto	u651
   546     075E  2F60               	goto	u650
   547     075F                     u651:
   548     075F  2F51               	goto	l1075
   549     0760                     u650:
   550     0760                     l1077:
   551                           
   552                           ;GSM3.c: 61:         c=key();
   553     0760  120A  118A  268F  120A  118A  	fcall	_key
   554     0765  1283               	bcf	3,5	;RP0=0, select bank0
   555     0766  1303               	bcf	3,6	;RP1=0, select bank0
   556     0767  00AF               	movwf	main@c
   557     0768                     l1079:
   558                           
   559                           ;GSM3.c: 62:         if(c>='0'&&c<='9'){
   560     0768  3030               	movlw	48
   561     0769  022F               	subwf	main@c,w
   562     076A  1C03               	skipc
   563     076B  2F6D               	goto	u661
   564     076C  2F6E               	goto	u660
   565     076D                     u661:
   566     076D  2FC4               	goto	l1113
   567     076E                     u660:
   568     076E                     l1081:
   569     076E  303A               	movlw	58
   570     076F  022F               	subwf	main@c,w
   571     0770  1803               	skipnc
   572     0771  2F73               	goto	u671
   573     0772  2F74               	goto	u670
   574     0773                     u671:
   575     0773  2FC4               	goto	l1113
   576     0774                     u670:
   577     0774                     l1083:
   578                           
   579                           ;GSM3.c: 63:             for(int i=0;i<=9;i++){
   580     0774  01AB               	clrf	main@i_93
   581     0775  01AC               	clrf	main@i_93+1
   582     0776                     l1089:
   583                           
   584                           ;GSM3.c: 64:                 phonenumber[i]=c;
   585     0776  1283               	bcf	3,5	;RP0=0, select bank0
   586     0777  1303               	bcf	3,6	;RP1=0, select bank0
   587     0778  082B               	movf	main@i_93,w
   588     0779  3E20               	addlw	(low (main@phonenumber| 0))& (0+255)
   589     077A  0084               	movwf	4
   590     077B  082F               	movf	main@c,w
   591     077C  1383               	bcf	3,7	;select IRP bank0
   592     077D  0080               	movwf	0
   593     077E                     l1091:
   594                           
   595                           ;GSM3.c: 65:                 c=key();
   596     077E  120A  118A  268F  120A  118A  	fcall	_key
   597     0783  1283               	bcf	3,5	;RP0=0, select bank0
   598     0784  1303               	bcf	3,6	;RP1=0, select bank0
   599     0785  00AF               	movwf	main@c
   600     0786                     l1093:
   601                           
   602                           ;GSM3.c: 66:             }
   603     0786  3001               	movlw	1
   604     0787  07AB               	addwf	main@i_93,f
   605     0788  1803               	skipnc
   606     0789  0AAC               	incf	main@i_93+1,f
   607     078A  3000               	movlw	0
   608     078B  07AC               	addwf	main@i_93+1,f
   609     078C                     l1095:
   610     078C  082C               	movf	main@i_93+1,w
   611     078D  3A80               	xorlw	128
   612     078E  00FF               	movwf	btemp+1
   613     078F  3080               	movlw	128
   614     0790  027F               	subwf	btemp+1,w
   615     0791  1D03               	skipz
   616     0792  2F95               	goto	u685
   617     0793  300A               	movlw	10
   618     0794  022B               	subwf	main@i_93,w
   619     0795                     u685:
   620     0795  1C03               	skipc
   621     0796  2F98               	goto	u681
   622     0797  2F99               	goto	u680
   623     0798                     u681:
   624     0798  2F76               	goto	l1089
   625     0799                     u680:
   626     0799                     l1097:
   627                           
   628                           ;GSM3.c: 67:             phonenumber[10]='\0';
   629     0799  1283               	bcf	3,5	;RP0=0, select bank0
   630     079A  1303               	bcf	3,6	;RP1=0, select bank0
   631     079B  01AA               	clrf	main@phonenumber+10
   632     079C                     l1099:
   633                           
   634                           ;GSM3.c: 68:           if(c=='*'){
   635     079C  302A               	movlw	42
   636     079D  062F               	xorwf	main@c,w
   637     079E  1D03               	btfss	3,2
   638     079F  2FA1               	goto	u691
   639     07A0  2FA2               	goto	u690
   640     07A1                     u691:
   641     07A1  2FBD               	goto	l1109
   642     07A2                     u690:
   643     07A2                     l1101:
   644                           
   645                           ;GSM3.c: 69:                cmd(0x8A);
   646     07A2  308A               	movlw	138
   647     07A3  120A  118A  25B9  120A  118A  	fcall	_cmd
   648     07A8                     l1103:
   649                           
   650                           ;GSM3.c: 70:                show("CALLING");
   651     07A8  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   652     07A9  120A  118A  2615  120A  118A  	fcall	_show
   653     07AE                     l1105:
   654                           
   655                           ;GSM3.c: 71:                _delay((unsigned long)((1)*(20000000/4000.0)));
   656     07AE  3007               	movlw	7
   657     07AF  00F6               	movwf	??_main+1
   658     07B0  307D               	movlw	125
   659     07B1  00F5               	movwf	??_main
   660     07B2                     u737:
   661     07B2  0BF5               	decfsz	??_main,f
   662     07B3  2FB2               	goto	u737
   663     07B4  0BF6               	decfsz	??_main+1,f
   664     07B5  2FB2               	goto	u737
   665     07B6                     l1107:
   666                           
   667                           ;GSM3.c: 72:               Call(phonenumber);
   668     07B6  3020               	movlw	(low (main@phonenumber| 0))& (0+255)
   669     07B7  120A  118A  25F8  120A  118A  	fcall	_Call
   670                           
   671                           ;GSM3.c: 74:               continue;
   672     07BC  2F34               	goto	l1059
   673     07BD                     l1109:
   674                           
   675                           ;GSM3.c: 77:             if(c=='#'){
   676     07BD  3023               	movlw	35
   677     07BE  062F               	xorwf	main@c,w
   678     07BF  1D03               	btfss	3,2
   679     07C0  2FC2               	goto	u701
   680     07C1  2FC3               	goto	u700
   681     07C2                     u701:
   682     07C2  2FC4               	goto	l1113
   683     07C3                     u700:
   684     07C3  2F34               	goto	l1059
   685     07C4                     l1113:
   686                           
   687                           ;GSM3.c: 81:         if(c=='*'){
   688     07C4  302A               	movlw	42
   689     07C5  062F               	xorwf	main@c,w
   690     07C6  1D03               	btfss	3,2
   691     07C7  2FC9               	goto	u711
   692     07C8  2FCA               	goto	u710
   693     07C9                     u711:
   694     07C9  2FDF               	goto	l1121
   695     07CA                     u710:
   696     07CA                     l1115:
   697                           
   698                           ;GSM3.c: 82:             SendCommand("ATDL\r\n");
   699     07CA  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   700     07CB  00F0               	movwf	SendCommand@command
   701     07CC  3080               	movlw	128
   702     07CD  00F1               	movwf	SendCommand@command+1
   703     07CE  120A  118A  2634  120A  118A  	fcall	_SendCommand
   704     07D3                     l1117:
   705                           
   706                           ;GSM3.c: 83:             cmd(0x8A);
   707     07D3  308A               	movlw	138
   708     07D4  120A  118A  25B9  120A  118A  	fcall	_cmd
   709     07D9                     l1119:
   710                           
   711                           ;GSM3.c: 84:             show("REDIAL LAST NUMBER");
   712     07D9  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   713     07DA  120A  118A  2615  120A  118A  	fcall	_show
   714     07DF                     l1121:
   715                           
   716                           ;GSM3.c: 87:         if(c=='#'){
   717     07DF  3023               	movlw	35
   718     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   719     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   720     07E2  062F               	xorwf	main@c,w
   721     07E3  1D03               	btfss	3,2
   722     07E4  2FE6               	goto	u721
   723     07E5  2FE7               	goto	u720
   724     07E6                     u721:
   725     07E6  2F34               	goto	l1059
   726     07E7                     u720:
   727     07E7                     l1123:
   728                           
   729                           ;GSM3.c: 88:             End();
   730     07E7  120A  118A  25AF  120A  118A  	fcall	_End
   731     07EC                     l1125:
   732                           
   733                           ;GSM3.c: 89:             cmd(0x8A);
   734     07EC  308A               	movlw	138
   735     07ED  120A  118A  25B9  120A  118A  	fcall	_cmd
   736     07F2                     l1127:
   737                           
   738                           ;GSM3.c: 90:             show("END THE CALL");
   739     07F2  3014               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   740     07F3  120A  118A  2615  120A  118A  	fcall	_show
   741     07F8  2F34               	goto	l1059
   742     07F9  120A  118A  2800   	ljmp	start
   743     07FC                     __end_of_main:
   744                           
   745                           	psect	text1
   746     0615                     __ptext1:	
   747 ;; *************** function _show *****************
   748 ;; Defined at:
   749 ;;		line 149 in file "GSM3.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  s               1    wreg     PTR unsigned char 
   752 ;;		 -> STR_5(13), STR_4(19), STR_2(8), STR_1(8), 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  s               1    3[COMMON] PTR unsigned char 
   755 ;;		 -> STR_5(13), STR_4(19), STR_2(8), STR_1(8), 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         1       0       0       0       0
   769 ;;Total ram usage:        1 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 1
   772 ;; This function calls:
   773 ;;		_dat
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     0615                     _show:	
   780                           ;psect for function _show
   781                           
   782                           
   783                           ;incstack = 0
   784                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   785                           ;show@s stored from wreg
   786     0615  00F3               	movwf	show@s
   787     0616                     l961:
   788                           
   789                           ;GSM3.c: 149: void show(unsigned char *s);GSM3.c: 150: {;GSM3.c: 151:     while(*s) {
   790     0616  2E27               	goto	l967
   791     0617                     l963:
   792                           
   793                           ;GSM3.c: 152:         dat(*s++);
   794     0617  0873               	movf	show@s,w
   795     0618  0084               	movwf	4
   796     0619  120A  118A  200D  120A  118A  	fcall	stringdir
   797     061E  120A  118A  25CC  120A  118A  	fcall	_dat
   798     0623                     l965:
   799     0623  3001               	movlw	1
   800     0624  00FF               	movwf	btemp+1
   801     0625  087F               	movf	btemp+1,w
   802     0626  07F3               	addwf	show@s,f
   803     0627                     l967:
   804                           
   805                           ;GSM3.c: 151:     while(*s) {
   806     0627  0873               	movf	show@s,w
   807     0628  0084               	movwf	4
   808     0629  120A  118A  200D  120A  118A  	fcall	stringdir
   809     062E  3A00               	xorlw	0
   810     062F  1D03               	skipz
   811     0630  2E32               	goto	u391
   812     0631  2E33               	goto	u390
   813     0632                     u391:
   814     0632  2E17               	goto	l963
   815     0633                     u390:
   816     0633                     l104:
   817     0633  0008               	return
   818     0634                     __end_of_show:
   819                           
   820                           	psect	text2
   821     05CC                     __ptext2:	
   822 ;; *************** function _dat *****************
   823 ;; Defined at:
   824 ;;		line 139 in file "GSM3.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  b               1    wreg     unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  b               1    2[COMMON] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0
   840 ;;      Temps:          2       0       0       0       0
   841 ;;      Totals:         3       0       0       0       0
   842 ;;Total ram usage:        3 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_show
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     05CC                     _dat:	
   852                           ;psect for function _dat
   853                           
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _dat: [wreg]
   857                           ;dat@b stored from wreg
   858     05CC  00F2               	movwf	dat@b
   859     05CD                     l937:
   860                           
   861                           ;GSM3.c: 139: void dat(unsigned char b);GSM3.c: 140: {;GSM3.c: 141:     PORTB=b;
   862     05CD  0872               	movf	dat@b,w
   863     05CE  1283               	bcf	3,5	;RP0=0, select bank0
   864     05CF  1303               	bcf	3,6	;RP1=0, select bank0
   865     05D0  0086               	movwf	6	;volatile
   866     05D1                     l939:
   867                           
   868                           ;GSM3.c: 142:     RB0=1;
   869     05D1  1406               	bsf	6,0	;volatile
   870     05D2                     l941:
   871                           
   872                           ;GSM3.c: 144:     RB1=1;
   873     05D2  1486               	bsf	6,1	;volatile
   874                           
   875                           ;GSM3.c: 145:     _delay((unsigned long)((1)*(20000000/4000.0)));
   876     05D3  3007               	movlw	7
   877     05D4  00F1               	movwf	??_dat+1
   878     05D5  307D               	movlw	125
   879     05D6  00F0               	movwf	??_dat
   880     05D7                     u747:
   881     05D7  0BF0               	decfsz	??_dat,f
   882     05D8  2DD7               	goto	u747
   883     05D9  0BF1               	decfsz	??_dat+1,f
   884     05DA  2DD7               	goto	u747
   885     05DB                     l943:
   886                           
   887                           ;GSM3.c: 146:     RB1=0;
   888     05DB  1283               	bcf	3,5	;RP0=0, select bank0
   889     05DC  1303               	bcf	3,6	;RP1=0, select bank0
   890     05DD  1086               	bcf	6,1	;volatile
   891     05DE                     l98:
   892     05DE  0008               	return
   893     05DF                     __end_of_dat:
   894                           
   895                           	psect	text3
   896     05DF                     __ptext3:	
   897 ;; *************** function _lcd_init *****************
   898 ;; Defined at:
   899 ;;		line 121 in file "GSM3.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 1
   920 ;; This function calls:
   921 ;;		_cmd
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     05DF                     _lcd_init:	
   928                           ;psect for function _lcd_init
   929                           
   930     05DF                     l959:	
   931                           ;incstack = 0
   932                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   933                           
   934                           
   935                           ;GSM3.c: 123:     cmd(0x38);
   936     05DF  3038               	movlw	56
   937     05E0  120A  118A  25B9  120A  118A  	fcall	_cmd
   938                           
   939                           ;GSM3.c: 124:     cmd(0x0c);
   940     05E5  300C               	movlw	12
   941     05E6  120A  118A  25B9  120A  118A  	fcall	_cmd
   942                           
   943                           ;GSM3.c: 125:     cmd(0x06);
   944     05EB  3006               	movlw	6
   945     05EC  120A  118A  25B9  120A  118A  	fcall	_cmd
   946                           
   947                           ;GSM3.c: 126:     cmd(0x80);
   948     05F1  3080               	movlw	128
   949     05F2  120A  118A  25B9  120A  118A  	fcall	_cmd
   950     05F7                     l92:
   951     05F7  0008               	return
   952     05F8                     __end_of_lcd_init:
   953                           
   954                           	psect	text4
   955     05B9                     __ptext4:	
   956 ;; *************** function _cmd *****************
   957 ;; Defined at:
   958 ;;		line 129 in file "GSM3.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  a               1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  a               1    2[COMMON] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0
   974 ;;      Temps:          2       0       0       0       0
   975 ;;      Totals:         3       0       0       0       0
   976 ;;Total ram usage:        3 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;;		_lcd_init
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986     05B9                     _cmd:	
   987                           ;psect for function _cmd
   988                           
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _cmd: [wreg]
   992                           ;cmd@a stored from wreg
   993     05B9  00F2               	movwf	cmd@a
   994     05BA                     l921:
   995                           
   996                           ;GSM3.c: 129: void cmd(unsigned char a);GSM3.c: 130: {;GSM3.c: 131:     PORTB=a;
   997     05BA  0872               	movf	cmd@a,w
   998     05BB  1283               	bcf	3,5	;RP0=0, select bank0
   999     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1000     05BD  0086               	movwf	6	;volatile
  1001     05BE                     l923:
  1002                           
  1003                           ;GSM3.c: 132:     RB0=0;
  1004     05BE  1006               	bcf	6,0	;volatile
  1005     05BF                     l925:
  1006                           
  1007                           ;GSM3.c: 134:     RB1=1;
  1008     05BF  1486               	bsf	6,1	;volatile
  1009                           
  1010                           ;GSM3.c: 135:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1011     05C0  3007               	movlw	7
  1012     05C1  00F1               	movwf	??_cmd+1
  1013     05C2  307D               	movlw	125
  1014     05C3  00F0               	movwf	??_cmd
  1015     05C4                     u757:
  1016     05C4  0BF0               	decfsz	??_cmd,f
  1017     05C5  2DC4               	goto	u757
  1018     05C6  0BF1               	decfsz	??_cmd+1,f
  1019     05C7  2DC4               	goto	u757
  1020     05C8                     l927:
  1021                           
  1022                           ;GSM3.c: 136:     RB1=0;
  1023     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1024     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1025     05CA  1086               	bcf	6,1	;volatile
  1026     05CB                     l95:
  1027     05CB  0008               	return
  1028     05CC                     __end_of_cmd:
  1029                           
  1030                           	psect	text5
  1031     068F                     __ptext5:	
  1032 ;; *************** function _key *****************
  1033 ;; Defined at:
  1034 ;;		line 170 in file "GSM3.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      unsigned char 
  1041 ;; Registers used:
  1042 ;;		wreg
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061     068F                     _key:	
  1062                           ;psect for function _key
  1063                           
  1064     068F                     l116:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _key: [wreg]
  1067                           ;GSM3.c: 171:     while(1){
  1068                           
  1069                           
  1070                           ;GSM3.c: 172:         RD0=1;RD1=RD2=RD3=0;
  1071     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1072     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1073     0691  1408               	bsf	8,0	;volatile
  1074     0692  1188               	bcf	8,3	;volatile
  1075     0693  1108               	bcf	8,2	;volatile
  1076     0694  1088               	bcf	8,1	;volatile
  1077                           
  1078                           ;GSM3.c: 173:         if(RD4==1){
  1079     0695  1E08               	btfss	8,4	;volatile
  1080     0696  2E98               	goto	u401
  1081     0697  2E99               	goto	u400
  1082     0698                     u401:
  1083     0698  2E9F               	goto	l117
  1084     0699                     u400:
  1085     0699                     l118:
  1086     0699  1A08               	btfsc	8,4	;volatile
  1087     069A  2E9C               	goto	u411
  1088     069B  2E9D               	goto	u410
  1089     069C                     u411:
  1090     069C  2E99               	goto	l118
  1091     069D                     u410:
  1092     069D                     l971:
  1093                           
  1094                           ;GSM3.c: 175:             return '1';
  1095     069D  3031               	movlw	49
  1096     069E  2F18               	goto	l121
  1097     069F                     l117:	
  1098                           ;GSM3.c: 176:         }
  1099                           
  1100                           
  1101                           ;GSM3.c: 177:         if(RD5==1){
  1102     069F  1E88               	btfss	8,5	;volatile
  1103     06A0  2EA2               	goto	u421
  1104     06A1  2EA3               	goto	u420
  1105     06A2                     u421:
  1106     06A2  2EA9               	goto	l122
  1107     06A3                     u420:
  1108     06A3                     l123:
  1109     06A3  1A88               	btfsc	8,5	;volatile
  1110     06A4  2EA6               	goto	u431
  1111     06A5  2EA7               	goto	u430
  1112     06A6                     u431:
  1113     06A6  2EA3               	goto	l123
  1114     06A7                     u430:
  1115     06A7                     l977:
  1116                           
  1117                           ;GSM3.c: 179:             return '2';
  1118     06A7  3032               	movlw	50
  1119     06A8  2F18               	goto	l121
  1120     06A9                     l122:	
  1121                           ;GSM3.c: 180:         }
  1122                           
  1123                           
  1124                           ;GSM3.c: 181:         if(RD7==1){
  1125     06A9  1F88               	btfss	8,7	;volatile
  1126     06AA  2EAC               	goto	u441
  1127     06AB  2EAD               	goto	u440
  1128     06AC                     u441:
  1129     06AC  2EB3               	goto	l126
  1130     06AD                     u440:
  1131     06AD                     l127:
  1132     06AD  1B88               	btfsc	8,7	;volatile
  1133     06AE  2EB0               	goto	u451
  1134     06AF  2EB1               	goto	u450
  1135     06B0                     u451:
  1136     06B0  2EAD               	goto	l127
  1137     06B1                     u450:
  1138     06B1                     l983:
  1139                           
  1140                           ;GSM3.c: 183:             return '3';
  1141     06B1  3033               	movlw	51
  1142     06B2  2F18               	goto	l121
  1143     06B3                     l126:	
  1144                           ;GSM3.c: 184:         }
  1145                           
  1146                           
  1147                           ;GSM3.c: 185:         RD1=1;RD0=RD2=RD3=0;
  1148     06B3  1488               	bsf	8,1	;volatile
  1149     06B4  1188               	bcf	8,3	;volatile
  1150     06B5  1108               	bcf	8,2	;volatile
  1151     06B6  1008               	bcf	8,0	;volatile
  1152                           
  1153                           ;GSM3.c: 186:         if(RD4==1){
  1154     06B7  1E08               	btfss	8,4	;volatile
  1155     06B8  2EBA               	goto	u461
  1156     06B9  2EBB               	goto	u460
  1157     06BA                     u461:
  1158     06BA  2EC1               	goto	l130
  1159     06BB                     u460:
  1160     06BB                     l131:
  1161     06BB  1A08               	btfsc	8,4	;volatile
  1162     06BC  2EBE               	goto	u471
  1163     06BD  2EBF               	goto	u470
  1164     06BE                     u471:
  1165     06BE  2EBB               	goto	l131
  1166     06BF                     u470:
  1167     06BF                     l989:
  1168                           
  1169                           ;GSM3.c: 188:             return '4';
  1170     06BF  3034               	movlw	52
  1171     06C0  2F18               	goto	l121
  1172     06C1                     l130:	
  1173                           ;GSM3.c: 189:         }
  1174                           
  1175                           
  1176                           ;GSM3.c: 190:         if(RD5==1){
  1177     06C1  1E88               	btfss	8,5	;volatile
  1178     06C2  2EC4               	goto	u481
  1179     06C3  2EC5               	goto	u480
  1180     06C4                     u481:
  1181     06C4  2ECB               	goto	l134
  1182     06C5                     u480:
  1183     06C5                     l135:
  1184     06C5  1A88               	btfsc	8,5	;volatile
  1185     06C6  2EC8               	goto	u491
  1186     06C7  2EC9               	goto	u490
  1187     06C8                     u491:
  1188     06C8  2EC5               	goto	l135
  1189     06C9                     u490:
  1190     06C9                     l995:
  1191                           
  1192                           ;GSM3.c: 192:             return '5';
  1193     06C9  3035               	movlw	53
  1194     06CA  2F18               	goto	l121
  1195     06CB                     l134:	
  1196                           ;GSM3.c: 193:         }
  1197                           
  1198                           
  1199                           ;GSM3.c: 194:         if(RD7==1){
  1200     06CB  1F88               	btfss	8,7	;volatile
  1201     06CC  2ECE               	goto	u501
  1202     06CD  2ECF               	goto	u500
  1203     06CE                     u501:
  1204     06CE  2ED5               	goto	l138
  1205     06CF                     u500:
  1206     06CF                     l139:
  1207     06CF  1B88               	btfsc	8,7	;volatile
  1208     06D0  2ED2               	goto	u511
  1209     06D1  2ED3               	goto	u510
  1210     06D2                     u511:
  1211     06D2  2ECF               	goto	l139
  1212     06D3                     u510:
  1213     06D3                     l1001:
  1214                           
  1215                           ;GSM3.c: 196:             return '6';
  1216     06D3  3036               	movlw	54
  1217     06D4  2F18               	goto	l121
  1218     06D5                     l138:	
  1219                           ;GSM3.c: 197:         }
  1220                           
  1221                           
  1222                           ;GSM3.c: 198:          RD2=1;RD0=RD1=RD3=0;
  1223     06D5  1508               	bsf	8,2	;volatile
  1224     06D6  1188               	bcf	8,3	;volatile
  1225     06D7  1088               	bcf	8,1	;volatile
  1226     06D8  1008               	bcf	8,0	;volatile
  1227                           
  1228                           ;GSM3.c: 199:         if(RD4==1){
  1229     06D9  1E08               	btfss	8,4	;volatile
  1230     06DA  2EDC               	goto	u521
  1231     06DB  2EDD               	goto	u520
  1232     06DC                     u521:
  1233     06DC  2EE3               	goto	l142
  1234     06DD                     u520:
  1235     06DD                     l143:
  1236     06DD  1A08               	btfsc	8,4	;volatile
  1237     06DE  2EE0               	goto	u531
  1238     06DF  2EE1               	goto	u530
  1239     06E0                     u531:
  1240     06E0  2EDD               	goto	l143
  1241     06E1                     u530:
  1242     06E1                     l1007:
  1243                           
  1244                           ;GSM3.c: 201:             return '7';
  1245     06E1  3037               	movlw	55
  1246     06E2  2F18               	goto	l121
  1247     06E3                     l142:	
  1248                           ;GSM3.c: 202:         }
  1249                           
  1250                           
  1251                           ;GSM3.c: 203:         if(RD5==1){
  1252     06E3  1E88               	btfss	8,5	;volatile
  1253     06E4  2EE6               	goto	u541
  1254     06E5  2EE7               	goto	u540
  1255     06E6                     u541:
  1256     06E6  2EED               	goto	l146
  1257     06E7                     u540:
  1258     06E7                     l147:
  1259     06E7  1A88               	btfsc	8,5	;volatile
  1260     06E8  2EEA               	goto	u551
  1261     06E9  2EEB               	goto	u550
  1262     06EA                     u551:
  1263     06EA  2EE7               	goto	l147
  1264     06EB                     u550:
  1265     06EB                     l1013:
  1266                           
  1267                           ;GSM3.c: 205:             return '8';
  1268     06EB  3038               	movlw	56
  1269     06EC  2F18               	goto	l121
  1270     06ED                     l146:	
  1271                           ;GSM3.c: 206:         }
  1272                           
  1273                           
  1274                           ;GSM3.c: 207:         if(RD7==1){
  1275     06ED  1F88               	btfss	8,7	;volatile
  1276     06EE  2EF0               	goto	u561
  1277     06EF  2EF1               	goto	u560
  1278     06F0                     u561:
  1279     06F0  2EF7               	goto	l150
  1280     06F1                     u560:
  1281     06F1                     l151:
  1282     06F1  1B88               	btfsc	8,7	;volatile
  1283     06F2  2EF4               	goto	u571
  1284     06F3  2EF5               	goto	u570
  1285     06F4                     u571:
  1286     06F4  2EF1               	goto	l151
  1287     06F5                     u570:
  1288     06F5                     l1019:
  1289                           
  1290                           ;GSM3.c: 209:             return '9';
  1291     06F5  3039               	movlw	57
  1292     06F6  2F18               	goto	l121
  1293     06F7                     l150:	
  1294                           ;GSM3.c: 210:         }
  1295                           
  1296                           
  1297                           ;GSM3.c: 211:          RD3=1;RD0=RD1=RD2=0;
  1298     06F7  1588               	bsf	8,3	;volatile
  1299     06F8  1108               	bcf	8,2	;volatile
  1300     06F9  1088               	bcf	8,1	;volatile
  1301     06FA  1008               	bcf	8,0	;volatile
  1302                           
  1303                           ;GSM3.c: 212:         if(RD4==1){
  1304     06FB  1E08               	btfss	8,4	;volatile
  1305     06FC  2EFE               	goto	u581
  1306     06FD  2EFF               	goto	u580
  1307     06FE                     u581:
  1308     06FE  2F05               	goto	l154
  1309     06FF                     u580:
  1310     06FF                     l155:
  1311     06FF  1A08               	btfsc	8,4	;volatile
  1312     0700  2F02               	goto	u591
  1313     0701  2F03               	goto	u590
  1314     0702                     u591:
  1315     0702  2EFF               	goto	l155
  1316     0703                     u590:
  1317     0703                     l1025:
  1318                           
  1319                           ;GSM3.c: 214:             return '*';
  1320     0703  302A               	movlw	42
  1321     0704  2F18               	goto	l121
  1322     0705                     l154:	
  1323                           ;GSM3.c: 215:         }
  1324                           
  1325                           
  1326                           ;GSM3.c: 216:         if(RD5==1){
  1327     0705  1E88               	btfss	8,5	;volatile
  1328     0706  2F08               	goto	u601
  1329     0707  2F09               	goto	u600
  1330     0708                     u601:
  1331     0708  2F0F               	goto	l158
  1332     0709                     u600:
  1333     0709                     l159:
  1334     0709  1A88               	btfsc	8,5	;volatile
  1335     070A  2F0C               	goto	u611
  1336     070B  2F0D               	goto	u610
  1337     070C                     u611:
  1338     070C  2F09               	goto	l159
  1339     070D                     u610:
  1340     070D                     l1031:
  1341                           
  1342                           ;GSM3.c: 218:             return '0';
  1343     070D  3030               	movlw	48
  1344     070E  2F18               	goto	l121
  1345     070F                     l158:	
  1346                           ;GSM3.c: 219:         }
  1347                           
  1348                           
  1349                           ;GSM3.c: 220:         if(RD7==1){
  1350     070F  1F88               	btfss	8,7	;volatile
  1351     0710  2F12               	goto	u621
  1352     0711  2F13               	goto	u620
  1353     0712                     u621:
  1354     0712  2E8F               	goto	l116
  1355     0713                     u620:
  1356     0713                     l163:
  1357     0713  1B88               	btfsc	8,7	;volatile
  1358     0714  2F16               	goto	u631
  1359     0715  2F17               	goto	u630
  1360     0716                     u631:
  1361     0716  2F13               	goto	l163
  1362     0717                     u630:
  1363     0717                     l1037:
  1364                           
  1365                           ;GSM3.c: 222:             return '#';
  1366     0717  3023               	movlw	35
  1367     0718                     l121:
  1368     0718  0008               	return
  1369     0719                     __end_of_key:
  1370                           
  1371                           	psect	text6
  1372     065A                     __ptext6:	
  1373 ;; *************** function _Init *****************
  1374 ;; Defined at:
  1375 ;;		line 97 in file "GSM3.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0
  1391 ;;      Temps:          3       0       0       0       0
  1392 ;;      Totals:         3       0       0       0       0
  1393 ;;Total ram usage:        3 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 2
  1396 ;; This function calls:
  1397 ;;		_SendCommand
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403     065A                     _Init:	
  1404                           ;psect for function _Init
  1405                           
  1406     065A                     l945:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1409                           
  1410                           
  1411                           ;GSM3.c: 99:     SPEN=1;
  1412     065A  1283               	bcf	3,5	;RP0=0, select bank0
  1413     065B  1303               	bcf	3,6	;RP1=0, select bank0
  1414     065C  1798               	bsf	24,7	;volatile
  1415                           
  1416                           ;GSM3.c: 100:     TXEN= 1;
  1417     065D  1683               	bsf	3,5	;RP0=1, select bank1
  1418     065E  1303               	bcf	3,6	;RP1=0, select bank1
  1419     065F  1698               	bsf	24,5	;volatile
  1420                           
  1421                           ;GSM3.c: 101:     BRGH=1;
  1422     0660  1518               	bsf	24,2	;volatile
  1423     0661                     l947:
  1424                           
  1425                           ;GSM3.c: 102:     SPBRG=129;
  1426     0661  3081               	movlw	129
  1427     0662  0099               	movwf	25	;volatile
  1428     0663                     l949:
  1429                           
  1430                           ;GSM3.c: 103:     SYNC=0;
  1431     0663  1218               	bcf	24,4	;volatile
  1432     0664                     l951:
  1433                           
  1434                           ;GSM3.c: 104:     CREN=1;
  1435     0664  1283               	bcf	3,5	;RP0=0, select bank0
  1436     0665  1303               	bcf	3,6	;RP1=0, select bank0
  1437     0666  1618               	bsf	24,4	;volatile
  1438                           
  1439                           ;GSM3.c: 105:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1440     0667  3003               	movlw	3
  1441     0668  00F4               	movwf	??_Init+2
  1442     0669  308A               	movlw	138
  1443     066A  00F3               	movwf	??_Init+1
  1444     066B  3055               	movlw	85
  1445     066C  00F2               	movwf	??_Init
  1446     066D                     u767:
  1447     066D  0BF2               	decfsz	??_Init,f
  1448     066E  2E6D               	goto	u767
  1449     066F  0BF3               	decfsz	??_Init+1,f
  1450     0670  2E6D               	goto	u767
  1451     0671  0BF4               	decfsz	??_Init+2,f
  1452     0672  2E6D               	goto	u767
  1453     0673  2E74               	nop2
  1454     0674                     l953:
  1455                           
  1456                           ;GSM3.c: 106:     SendCommand("AT");
  1457     0674  3044               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1458     0675  00F0               	movwf	SendCommand@command
  1459     0676  3080               	movlw	128
  1460     0677  00F1               	movwf	SendCommand@command+1
  1461     0678  120A  118A  2634  120A  118A  	fcall	_SendCommand
  1462     067D                     l955:
  1463                           
  1464                           ;GSM3.c: 107:     TXREG='\r';
  1465     067D  300D               	movlw	13
  1466     067E  1283               	bcf	3,5	;RP0=0, select bank0
  1467     067F  1303               	bcf	3,6	;RP1=0, select bank0
  1468     0680  0099               	movwf	25	;volatile
  1469     0681                     l957:
  1470                           
  1471                           ;GSM3.c: 108:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1472     0681  3003               	movlw	3
  1473     0682  00F4               	movwf	??_Init+2
  1474     0683  308A               	movlw	138
  1475     0684  00F3               	movwf	??_Init+1
  1476     0685  3055               	movlw	85
  1477     0686  00F2               	movwf	??_Init
  1478     0687                     u777:
  1479     0687  0BF2               	decfsz	??_Init,f
  1480     0688  2E87               	goto	u777
  1481     0689  0BF3               	decfsz	??_Init+1,f
  1482     068A  2E87               	goto	u777
  1483     068B  0BF4               	decfsz	??_Init+2,f
  1484     068C  2E87               	goto	u777
  1485     068D  2E8E               	nop2
  1486     068E                     l80:
  1487     068E  0008               	return
  1488     068F                     __end_of_Init:
  1489                           
  1490                           	psect	text7
  1491     05AF                     __ptext7:	
  1492 ;; *************** function _End *****************
  1493 ;; Defined at:
  1494 ;;		line 166 in file "GSM3.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 2
  1515 ;; This function calls:
  1516 ;;		_SendCommand
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522     05AF                     _End:	
  1523                           ;psect for function _End
  1524                           
  1525     05AF                     l1043:	
  1526                           ;incstack = 0
  1527                           ; Regs used in _End: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1528                           
  1529                           
  1530                           ;GSM3.c: 167:     SendCommand("ATH\r\n");
  1531     05AF  3036               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1532     05B0  00F0               	movwf	SendCommand@command
  1533     05B1  3080               	movlw	128
  1534     05B2  00F1               	movwf	SendCommand@command+1
  1535     05B3  120A  118A  2634  120A  118A  	fcall	_SendCommand
  1536     05B8                     l113:
  1537     05B8  0008               	return
  1538     05B9                     __end_of_End:
  1539                           
  1540                           	psect	text8
  1541     05F8                     __ptext8:	
  1542 ;; *************** function _Call *****************
  1543 ;; Defined at:
  1544 ;;		line 157 in file "GSM3.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  phoneNumber     1    wreg     PTR const unsigned char 
  1547 ;;		 -> main@phonenumber(11), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  phoneNumber     1    2[COMMON] PTR const unsigned char 
  1550 ;;		 -> main@phonenumber(11), 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1560 ;;      Params:         0       0       0       0       0
  1561 ;;      Locals:         1       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0
  1563 ;;      Totals:         1       0       0       0       0
  1564 ;;Total ram usage:        1 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 2
  1567 ;; This function calls:
  1568 ;;		_SendCommand
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574     05F8                     _Call:	
  1575                           ;psect for function _Call
  1576                           
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _Call: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1580                           ;Call@phoneNumber stored from wreg
  1581     05F8  00F2               	movwf	Call@phoneNumber
  1582     05F9                     l1041:
  1583                           
  1584                           ;GSM3.c: 158:     SendCommand("ATD");
  1585     05F9  3040               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1586     05FA  00F0               	movwf	SendCommand@command
  1587     05FB  3080               	movlw	128
  1588     05FC  00F1               	movwf	SendCommand@command+1
  1589     05FD  120A  118A  2634  120A  118A  	fcall	_SendCommand
  1590                           
  1591                           ;GSM3.c: 159:     SendCommand(phoneNumber);
  1592     0602  0872               	movf	Call@phoneNumber,w
  1593     0603  00F0               	movwf	SendCommand@command
  1594     0604  3000               	movlw	0
  1595     0605  00F1               	movwf	SendCommand@command+1
  1596     0606  120A  118A  2634  120A  118A  	fcall	_SendCommand
  1597                           
  1598                           ;GSM3.c: 160:     SendCommand(";\r\n");
  1599     060B  303C               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1600     060C  00F0               	movwf	SendCommand@command
  1601     060D  3080               	movlw	128
  1602     060E  00F1               	movwf	SendCommand@command+1
  1603     060F  120A  118A  2634  120A  118A  	fcall	_SendCommand
  1604     0614                     l107:
  1605     0614  0008               	return
  1606     0615                     __end_of_Call:
  1607                           
  1608                           	psect	text9
  1609     0634                     __ptext9:	
  1610 ;; *************** function _SendCommand *****************
  1611 ;; Defined at:
  1612 ;;		line 113 in file "GSM3.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  command         2    0[COMMON] PTR const unsigned char 
  1615 ;;		 -> STR_10(6), STR_9(6), STR_8(4), STR_7(4), 
  1616 ;;		 -> STR_6(3), STR_3(7), main@phonenumber(11), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         2       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         2       0       0       0       0
  1632 ;;Total ram usage:        2 bytes
  1633 ;; Hardware stack levels used: 2
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;;		_Init
  1639 ;;		_Call
  1640 ;;		_End
  1641 ;;		_Answer
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645     0634                     _SendCommand:	
  1646                           ;psect for function _SendCommand
  1647                           
  1648     0634                     l929:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _SendCommand: [wreg-fsr0h+btemp+1+pclath]
  1651                           
  1652                           
  1653                           ;GSM3.c: 114:     while(*command != '\0') {
  1654     0634  2E49               	goto	l935
  1655     0635                     l931:
  1656                           
  1657                           ;GSM3.c: 116:         TXREG = *command;
  1658     0635  0871               	movf	SendCommand@command+1,w
  1659     0636  00FF               	movwf	btemp+1
  1660     0637  0870               	movf	SendCommand@command,w
  1661     0638  0084               	movwf	4
  1662     0639  120A  118A  2003  120A  118A  	fcall	stringtab
  1663     063E  0099               	movwf	25	;volatile
  1664     063F                     l85:	
  1665                           ;GSM3.c: 117:         while(!TXIF);
  1666                           
  1667     063F  1E0C               	btfss	12,4	;volatile
  1668     0640  2E42               	goto	u371
  1669     0641  2E43               	goto	u370
  1670     0642                     u371:
  1671     0642  2E3F               	goto	l85
  1672     0643                     u370:
  1673     0643                     l933:
  1674                           
  1675                           ;GSM3.c: 118:         command++;
  1676     0643  3001               	movlw	1
  1677     0644  07F0               	addwf	SendCommand@command,f
  1678     0645  1803               	skipnc
  1679     0646  0AF1               	incf	SendCommand@command+1,f
  1680     0647  3000               	movlw	0
  1681     0648  07F1               	addwf	SendCommand@command+1,f
  1682     0649                     l935:
  1683                           
  1684                           ;GSM3.c: 114:     while(*command != '\0') {
  1685     0649  0871               	movf	SendCommand@command+1,w
  1686     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1687     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1688     064C  00FF               	movwf	btemp+1
  1689     064D  0870               	movf	SendCommand@command,w
  1690     064E  0084               	movwf	4
  1691     064F  120A  118A  2003  120A  118A  	fcall	stringtab
  1692     0654  3A00               	xorlw	0
  1693     0655  1D03               	skipz
  1694     0656  2E58               	goto	u381
  1695     0657  2E59               	goto	u380
  1696     0658                     u381:
  1697     0658  2E35               	goto	l931
  1698     0659                     u380:
  1699     0659                     l89:
  1700     0659  0008               	return
  1701     065A                     __end_of_SendCommand:
  1702     007E                     btemp	set	126	;btemp
  1703     007E                     wtemp0	set	126
  1704                           
  1705                           	psect	config
  1706                           
  1707                           ;Config register CONFIG @ 0x2007
  1708                           ;	Oscillator Selection bits
  1709                           ;	FOSC = XT, XT oscillator
  1710                           ;	Watchdog Timer Enable bit
  1711                           ;	WDTE = OFF, WDT disabled
  1712                           ;	Power-up Timer Enable bit
  1713                           ;	PWRTE = OFF, PWRT disabled
  1714                           ;	Brown-out Reset Enable bit
  1715                           ;	BOREN = OFF, BOR disabled
  1716                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1717                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1718                           ;	Data EEPROM Memory Code Protection bit
  1719                           ;	CPD = OFF, Data EEPROM code protection off
  1720                           ;	Flash Program Memory Write Enable bits
  1721                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1722                           ;	In-Circuit Debugger Mode bit
  1723                           ;	DEBUG = 0x1, unprogrammed default
  1724                           ;	Flash Program Memory Code Protection bit
  1725                           ;	CP = OFF, Code protection off
  1726     2007                     	org	8199
  1727     2007  3F39               	dw	16185

Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Call@phoneNumber	PTR const unsigned char  size(1) Largest target is 11
		 -> main@phonenumber(BANK0[11]), 

    SendCommand@command	PTR const unsigned char  size(2) Largest target is 11
		 -> main@phonenumber(BANK0[11]), STR_10(CODE[6]), STR_3(CODE[7]), STR_6(CODE[3]), 
		 -> STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[6]), 

    show@s	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[8]), STR_4(CODE[19]), STR_5(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_Init
    _show->_dat
    _lcd_init->_cmd
    _Init->_SendCommand
    _End->_SendCommand
    _Call->_SendCommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    2995
                                              5 COMMON     2     2      0
                                              0 BANK0     16    16      0
                               _Call
                                _End
                               _Init
                        _SendCommand
                                _cmd
                                _key
                           _lcd_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 1     1      0     199
                                              3 COMMON     1     1      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _key                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 3     3      0     577
                                              2 COMMON     3     3      0
                        _SendCommand
 ---------------------------------------------------------------------------------
 (1) _End                                                  0     0      0     577
                        _SendCommand
 ---------------------------------------------------------------------------------
 (1) _Call                                                 1     1      0     632
                                              2 COMMON     1     1      0
                        _SendCommand
 ---------------------------------------------------------------------------------
 (2) _SendCommand                                          2     0      2     577
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Call
     _SendCommand
   _End
     _SendCommand
   _Init
     _SendCommand
   _SendCommand
   _cmd
   _key
   _lcd_init
     _cmd
   _show
     _dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 20 16:35:47 2024

                      pc 0002                       l80 068E                       l92 05F7  
                     l85 063F                       l95 05CB                       l89 0659  
                     l98 05DE                       fsr 0004                      l104 0633  
                    l113 05B8                      l121 0718                      l130 06C1  
                    l122 06A9                      l107 0614                      l131 06BB  
                    l123 06A3                      l116 068F                      l117 069F  
                    l150 06F7                      l142 06E3                      l134 06CB  
                    l126 06B3                      l118 0699                      l151 06F1  
                    l143 06DD                      l135 06C5                      l127 06AD  
                    l154 0705                      l146 06ED                      l138 06D5  
                    l163 0713                      l155 06FF                      l147 06E7  
                    l139 06CF                      l158 070F                      l159 0709  
                    l921 05BA                      l931 0635                      l923 05BE  
                    l933 0643                      l925 05BF                      l941 05D2  
                    l935 0649                      l951 0664                      l927 05C8  
                    l943 05DB                      l929 0634                      l953 0674  
                    l945 065A                      l937 05CD                      l961 0616  
                    l955 067D                      l947 0661                      l971 069D  
                    l939 05D1                      l963 0617                      l957 0681  
                    l949 0663                      l965 0623                      l983 06B1  
                    l959 05DF                      l967 0627                      l977 06A7  
                    l995 06C9                      l989 06BF                      _RB0 0030  
                    _RB1 0031                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD7 0047                      u400 0699  
                    u401 0698                      u410 069D                      u411 069C  
                    u500 06CF                      u420 06A3                      u501 06CE  
                    u421 06A2                      u510 06D3                      u430 06A7  
                    u511 06D2                      u431 06A6                      u600 0709  
                    u520 06DD                      u440 06AD                      u601 0708  
                    u521 06DC                      u441 06AC                      u370 0643  
                    u610 070D                      u530 06E1                      u450 06B1  
                    u371 0642                      u611 070C                      u531 06E0  
                    u451 06B0                      u380 0659                      u620 0713  
                    u540 06E7                      u460 06BB                      u700 07C3  
                    u381 0658                      u621 0712                      u541 06E6  
                    u461 06BA                      u701 07C2                      u630 0717  
                    u550 06EB                      u470 06BF                      u390 0633  
                    u710 07CA                      u631 0716                      u551 06EA  
                    u471 06BE                      u391 0632                      u711 07C9  
                    u560 06F1                      u480 06C5                      u720 07E7  
                    u640 0747                      u561 06F0                      u481 06C4  
                    u721 07E6                      u641 0746                      u570 06F5  
                    u490 06C9                      u650 0760                      u571 06F4  
                    u491 06C8                      u651 075F                      u580 06FF  
                    u660 076E                      u581 06FE                      u661 076D  
                    u590 0703                      u670 0774                      u591 0702  
                    u671 0773                      u680 0799                      u737 07B2  
                    u681 0798                      u690 07A2                      u747 05D7  
                    u691 07A1                      u757 05C4                      u685 0795  
                    u767 066D                      u777 0687                      _End 05AF  
                    _dat 05CC                      _cmd 05B9                      _key 068F  
                    fsr0 0004                      indf 0000                     ?_End 0070  
                   l1001 06D3                     l1013 06EB                     l1101 07A2  
                   l1031 070D                     l1007 06E1                     l1103 07A8  
                   l1041 05F9                     l1025 0703                     l1121 07DF  
                   l1105 07AE                     l1113 07C4                     l1043 05AF  
                   l1019 06F5                     l1123 07E7                     l1115 07CA  
                   l1107 07B6                     l1051 0723                     l1037 0717  
                   l1125 07EC                     l1117 07D3                     l1109 07BD  
                   l1053 0728                     l1045 0719                     l1127 07F2  
                   l1119 07D9                     l1055 072E                     l1047 071D  
                   l1081 076E                     l1065 0738                     l1057 0734  
                   l1049 071E                     l1091 077E                     l1083 0774  
                   l1075 0751                     l1067 0747                     l1059 0734  
                   l1093 0786                     l1077 0760                     l1069 074D  
                   ?_dat 0070                     l1095 078C                     l1079 0768  
                   l1097 0799                     l1089 0776                     ?_cmd 0070  
                   l1099 079C                     ?_key 0070                     STR_1 0033  
                   STR_2 0033                     STR_3 003B                     STR_4 0013  
                   STR_5 0026                     STR_6 0056                     STR_7 0052  
                   STR_8 004E                     STR_9 0042                     _BRGH 04C2  
                   _CREN 00C4                     _SPEN 00C7                     _TXEN 04C5  
                   _TXIF 0064                     _SYNC 04C4                     _Call 05F8  
                   _Init 065A                     dat@b 0072                     cmd@a 0072  
                   _main 0719                     _show 0615                     btemp 007E  
                   start 0000                    ??_End 0072                    ??_dat 0070  
                  ??_cmd 0070                    ??_key 0070                    ?_Call 0070  
                  ?_Init 0070                    ?_main 0070                    STR_10 0048  
                  ?_show 0070                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  main@c 002F                    main@i 002D                    pclath 000A  
                  show@s 0073                    status 0003                    wtemp0 007E  
           __end_of_Call 0615          __initialization 07FC             __end_of_Init 068F  
          ??_SendCommand 0072             __end_of_main 07FC             __end_of_show 0634  
                 ??_Call 0072                   ??_Init 0072                   ??_main 0075  
                 ??_show 0073         __end_of_lcd_init 05F8      __end_of_SendCommand 065A  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0719  
            _SendCommand 0634          Call@phoneNumber 0072                ?_lcd_init 0070  
             __stringtab 0003                  __ptext1 0615                  __ptext2 05CC  
                __ptext3 05DF                  __ptext4 05B9                  __ptext5 068F  
                __ptext6 065A                  __ptext7 05AF                  __ptext8 05F8  
                __ptext9 0634               ??_lcd_init 0073     end_of_initialization 07FC  
     SendCommand@command 0070      start_initialization 07FC              __end_of_End 05B9  
            __end_of_dat 05DF              __end_of_cmd 05CC              __end_of_key 0719  
           ?_SendCommand 0070                ___latbits 0002            __pcstackBANK0 0020  
              __pstrings 0003              __stringbase 0012       __end_of__stringtab 0013  
               _lcd_init 05DF          main@phonenumber 0020                 main@i_93 002B  
              stringcode 000D                 stringdir 000D                 stringtab 0003  
